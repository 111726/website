version: 2.1
orbs:
  aws-s3: circleci/aws-s3@1.0.15
jobs:
  build:
    working_directory: ~/work
    docker:
      - image: circleci/ruby:latest
    environment:
      - JEKYLL_ENV=production
      - NOKOGIRI_USE_SYSTEM_LIBRARIES=true
    steps:
      - checkout
      - restore_cache:
          key: gems-{{ checksum "Gemfile.lock" }}
      - run:
          name: Install checkout requirements
          command: |
            curl -s https://packagecloud.io/install/repositories/github/git-lfs/script.deb.sh | sudo bash
            sudo apt-get install git-lfs
            git lfs install
      - run:
          name: Checkout binaries
          command: git lfs pull
      - run:
          name: Install build requirements
          command: bundle install --path vendor/bundle
      - run:
          name: Build site
          command: bundle exec jekyll build
      - run:
          name: Test site
          command: bundle exec htmlproofer _site --check-html --disable-external --allow_hash_href
      - save_cache:
          paths:
            - /usr/local/bundle/gems
            - vendor/bundle
          key: gems-{{ checksum "Gemfile.lock" }}
      - store_artifacts:
          path: _site
          destination: _site
      - persist_to_workspace:
          root: ~/work
          paths:
            - _site/*
            - s3_website.yml
  deploy:
    working_directory: ~/work
    docker:
      - image: circleci/ruby:latest
    steps:
      - attach_workspace:
          at: ~/work
      - run:
          name: Install deploy requirements
          command: |
              if [[ "$CIRCLE_PROJECT_USERNAME" == "odkx" ]]; then \
                sudo apt-get install -y software-properties-common
                wget -qO - https://adoptopenjdk.jfrog.io/adoptopenjdk/api/gpg/key/public | sudo apt-key add -
                sudo add-apt-repository --yes https://adoptopenjdk.jfrog.io/adoptopenjdk/deb/
                sudo apt-get update
                sudo apt-get install -y pngquant adoptopenjdk-8-hotspot
              fi
      - run:
          name: Compress images
          command: |
              if [[ "$CIRCLE_PROJECT_USERNAME" == "odkx" ]]; then \
                find _site/assets/images -name '*.png' -exec pngquant --force --ext .png --verbose {} \;
              fi
      - aws-s3/sync:
          arguments: |
            --acl public-read \
            --cache-control "max-age=86400"
          aws-access-key-id: AWS_ACCESS_KEY_ID
          aws-region: AWS_DEFAULT_REGION
          aws-secret-access-key: AWS_SECRET_ACCESS_KEY 
          overwrite: true
          from: _site
          to: s3://odk-x.org

workflows:
  version: 2
  build_deploy:
    jobs:
      - build
      - deploy:
          context: AWS
          requires:
            - build
          filters:
            branches:
              only: master
